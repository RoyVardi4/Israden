[{"C:\\RoyVardi\\Projects\\mapbox-test\\src\\index.js":"1","C:\\RoyVardi\\Projects\\mapbox-test\\src\\App.js":"2","C:\\RoyVardi\\Projects\\mapbox-test\\src\\reportWebVitals.js":"3","C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\Marker.js":"4","C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\SpeedDial.js":"5","C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\Map\\Map.js":"6","C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\Alert\\Alert.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":99,"mtime":1621794012266,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2690,"mtime":1621198020001,"results":"12","hashOfConfig":"9"},{"size":2022,"mtime":1621202913642,"results":"13","hashOfConfig":"9"},{"size":1975,"mtime":1621796184658,"results":"14","hashOfConfig":"9"},{"size":199,"mtime":1621795534531,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"148axqr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\RoyVardi\\Projects\\mapbox-test\\src\\index.js",[],["33","34"],"C:\\RoyVardi\\Projects\\mapbox-test\\src\\App.js",[],"C:\\RoyVardi\\Projects\\mapbox-test\\src\\reportWebVitals.js",[],"C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\Marker.js",["35","36"],"import { Typography } from \"@material-ui/core\"\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport React, { Fragment, useEffect, useState } from \"react\"\r\nimport { Marker, Popup } from \"react-map-gl\"\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(2),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[750],\r\n    },\r\n  })\r\n  \r\n  const DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    )\r\n  })\r\n  \r\n\r\nconst Markers = ({markers}) => {\r\n    const [markerIdPopup, setMarkerIdPopup] = useState()\r\n\r\n    const handleClose = () => setMarkerIdPopup(null)\r\n\r\n    return (\r\n        <Fragment>\r\n        {markers.map((marker, index) => (\r\n            <div key={index}>\r\n                    <Marker\r\n                        offsetTop={-48}\r\n                        offsetLeft={-24}\r\n                        latitude={marker[1]}\r\n                        longitude={marker[0]}\r\n                    >\r\n                        <img \r\n                            src=\"https://img.icons8.com/color/48/000000/marker.png\"\r\n                            onClick={() => setMarkerIdPopup(index)}\r\n                        />\r\n                    </Marker>\r\n                    {   markerIdPopup === index ?\r\n                        <Popup\r\n                            styles=\"absolute\"\r\n                            closeButton={false}\r\n                            offsetTop={-48}\r\n                            offsetLeft={0}\r\n                            latitude={marker[1]}\r\n                            longitude={marker[0]}\r\n                        >\r\n                            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                                <Typography variant=\"h6\">Marker number {markerIdPopup}</Typography>\r\n                            </DialogTitle>\r\n                        </Popup> :\r\n                        null\r\n                    }\r\n            </div>\r\n        ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Markers\r\n\r\n","C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\SpeedDial.js",["37","38"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {GiPistolGun, GiMedicines} from 'react-icons/gi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // height: 380,\r\n    // transform: 'translateZ(0px)',\r\n    // flexGrow: 1,\r\n  },\r\n  speedDial: {\r\n    position: 'absolute',\r\n    top: theme.spacing(4),\r\n    right: theme.spacing(4),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function OpenIconSpeedDial({handleChangeAction}) {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false)\r\n  const [hidden, setHidden] = React.useState(false)\r\n\r\n  const handleClick = (Action) => {\r\n    handleChangeAction(Action)\r\n    handleClose()\r\n  }\r\n\r\n  const actions = [\r\n    { icon: <GiPistolGun size={30}/>, name: 'Guns', eventHandler: () => handleClick(\"Guns\") },\r\n    { icon: <GiMedicines size={30} />, name: 'Drugs', eventHandler: () => handleClick(\"Drugs\") },\r\n  ];\r\n\r\n  // const handleVisibility = () => {\r\n  //   setHidden((prevHidden) => !prevHidden);\r\n  // };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial openIcon example\"\r\n        className={classes.speedDial}\r\n        hidden={hidden}\r\n        icon={<SpeedDialIcon />}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}\r\n        direction=\"down\"\r\n      >\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={action.eventHandler}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n    </div>\r\n  );\r\n}","C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\Map\\Map.js",[],"C:\\RoyVardi\\Projects\\mapbox-test\\src\\components\\Alert\\Alert.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":6,"column":27,"nodeType":"45","messageId":"46","endLine":6,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":52,"column":25,"nodeType":"49","endLine":55,"endColumn":27},{"ruleId":"43","severity":1,"message":"50","line":7,"column":8,"nodeType":"45","messageId":"46","endLine":7,"endColumn":16},{"ruleId":"43","severity":1,"message":"51","line":28,"column":18,"nodeType":"45","messageId":"46","endLine":28,"endColumn":27},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'EditIcon' is defined but never used.","'setHidden' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]